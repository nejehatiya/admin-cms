"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getKeyphraseDensity;
exports.getKeywordDensity = getKeywordDensity;
var _getAllWordsFromTree = _interopRequireDefault(require("../helpers/word/getAllWordsFromTree"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
/**
 * Calculates the keyphrase density.
 *
 * @param {Paper} paper The paper containing keyphrase and text.
 * @param {Researcher} researcher The researcher.
 *
 * @returns {number} The keyphrase density.
 */
function getKeyphraseDensity(paper, researcher) {
  const getWordsCustomHelper = researcher.getHelper("getWordsCustomHelper");
  let wordCount = 0;

  // If there is a custom getWords helper, use its output for countWords.
  if (getWordsCustomHelper) {
    wordCount = getWordsCustomHelper(paper.getText()).length;
  } else {
    wordCount = (0, _getAllWordsFromTree.default)(paper).length;
  }
  if (wordCount === 0) {
    return 0;
  }
  const keyphraseCount = researcher.getResearch("getKeyphraseCount");
  return keyphraseCount.count / wordCount * 100;
}

/**
 * Calculates the keyphrase density.
 *
 * @deprecated Use getKeyphraseDensity instead.
 *
 * @param {Paper} paper The paper containing keyphrase and text.
 * @param {Researcher} researcher The researcher.
 *
 * @returns {number} The keyphrase density.
 */
function getKeywordDensity(paper, researcher) {
  console.warn("This function is deprecated, use getKeyphraseDensity instead.");
  return getKeyphraseDensity(paper, researcher);
}
//# sourceMappingURL=getKeywordDensity.js.map