"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
var _countWords = _interopRequireDefault(require("../word/countWords.js"));
var _lodash = require("lodash");
var _stripHTMLTags = require("../sanitize/stripHTMLTags.js");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
/**
 * Returns an array with the length of each sentence.
 *
 * @param {Array} sentences Array with sentences from text.
 * @param {Researcher} 	researcher 	The researcher to use for analysis.
 *
 * @returns {Array} Array with the length of each sentence.
 */
function _default(sentences, researcher) {
  const sentencesWordCount = [];
  (0, _lodash.forEach)(sentences, function (sentence) {
    // For counting words we want to omit the HTMLtags.
    const strippedSentence = (0, _stripHTMLTags.stripFullTags)(sentence);
    // A helper to count characters for languages that don't count number of words for text length.
    const countCharacters = researcher.getHelper("customCountLength");
    const length = countCharacters ? countCharacters(strippedSentence) : (0, _countWords.default)(strippedSentence);
    if (length <= 0) {
      return;
    }
    sentencesWordCount.push({
      sentence: sentence,
      sentenceLength: length
    });
  });
  return sentencesWordCount;
}
//# sourceMappingURL=sentencesLength.js.map