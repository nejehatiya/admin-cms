"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
var _getSentencesFromTree = _interopRequireDefault(require("../sentence/getSentencesFromTree"));
var _lodash = require("lodash");
var _removePunctuation = _interopRequireDefault(require("../sanitize/removePunctuation"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
/**
 * Gets the words from the tree, i.e. from the paragraph and heading nodes.
 * These two node types are the nodes that should contain words for the analysis.
 *
 * @param {Paper} paper The paper to get the tree and words from.
 *
 * @returns {String[]} Array of words retrieved from the tree.
 */
function _default(paper) {
  const sentences = (0, _getSentencesFromTree.default)(paper);
  // Get all the tokens from each sentence.
  const tokens = sentences.map(sentence => sentence.tokens);
  let words = (0, _lodash.flatMap)(tokens).map(token => token.text);
  // Remove punctuation and spaces.
  words = words.map(token => (0, _removePunctuation.default)(token));

  // Filter out empty tokens.
  return words.filter(word => word.trim() !== "");
}
//# sourceMappingURL=getAllWordsFromTree.js.map